@using Microsoft.Owin.Security

<h3>Connexion avec Google.</h3>
@Html.ValidationSummary(true)
<p class="text-info">
    Vous allez être rédiriger pour vous connecter avec votre compte <strong>Google</strong>.<br/>
    <strong>Important: </strong> veuillez noté que nous n'utilisons aucune information de votre compte Google hors ligne.
</p>

<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
            for details on setting up this ASP.NET application to support logging in via external services.</p>
        </div>
    }
    else
    {
        string action = "ExternalLogin";
        string returnUrl = "localhost";
        using (Html.BeginForm(action, "Account", new {provider = "Google", ReturnUrl = returnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
               @foreach (AuthenticationDescription p in loginProviders)
                {
                    <button class="btn btn-lg btn-warning">Cliquez ici</button>
                }
                </p>
            </div>
        }
    }
}
